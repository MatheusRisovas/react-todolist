{"version":3,"sources":["components/ToDoItem.js","components/ToDos.js","components/layout/Header.js","components/AddToDo.js","components/pages/About.js","App.js","serviceWorker.js","index.js"],"names":["ToDoItem","_Component","_getPrototypeOf2","_this","Object","classCallCheck","this","_len","arguments","length","args","Array","_key","possibleConstructorReturn","getPrototypeOf","call","apply","concat","getStyle","background","padding","borderBottom","textDecoration","props","todo","completed","inherits","createClass","key","value","_this$props$todo","title","id","react_default","a","createElement","style","type","onChange","markComplete","bind","onClick","deleteTodo","btnStyle","Component","color","border","borderRadius","cursor","float","Todos","todos","map","components_ToDoItem","headerStyle","textAlign","linkStyle","Header","react_router_dom","to","AddToDo","state","e","setState","defineProperty","target","name","onSubmit","preventDefault","addTodo","display","flex","placeholder","className","About","App","axios","delete","then","res","toConsumableArray","filter","post","data","_this2","get","_this3","layout_Header","react_router","exact","path","render","Fragment","components_AddToDo","ToDos","component","Boolean","window","location","hostname","match","ReactDOM","src_App_0","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.152de972.chunk.js","sourcesContent":["import React, { Component } from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\n\r\nexport class ToDoItem extends Component {\r\n\r\n    getStyle = () => {\r\n        return {\r\n            background: '#f4f4f4',\r\n            padding: '10px',\r\n            borderBottom: '1px #ccc dotted',\r\n            textDecoration: this.props.todo.completed ? 'line-through' : 'none'\r\n        }\r\n    }\r\n\r\n    render() {\r\n        const {title,id} = this.props.todo;\r\n        return (\r\n            <div style={this.getStyle()}>\r\n                <p>\r\n                    <input type=\"checkbox\" onChange={this.props.markComplete.bind(this,id)} /> {' '}\r\n                    {title}\r\n                    <button onClick={this.props.deleteTodo.bind(this,id)} style={btnStyle}>X</button>\r\n                </p>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nToDoItem.propTypes = {\r\n    todo: PropTypes.object.isRequired\r\n}\r\n\r\nconst btnStyle = {\r\n    background:'#ff0000',\r\n    color:'#fff',\r\n    border:'none',\r\n    padding:'5px 8px',\r\n    borderRadius:'50%',\r\n    cursor:'pointer',\r\n    float:'right'\r\n}\r\n\r\nexport default ToDoItem\r\n","import React, { Component } from 'react';\r\nimport '../App.css';\r\nimport ToDoItem from './ToDoItem';\r\nimport PropTypes from 'prop-types';\r\n\r\nclass Todos extends Component {\r\n\r\n    render() {\r\n        return this.props.todos.map((todo)=>(\r\n        <ToDoItem key={todo.id} todo={todo} markComplete={this.props.markComplete}\r\n        deleteTodo={this.props.deleteTodo}/>\r\n        ));\r\n    }\r\n}\r\n\r\nTodos.propTypes = {\r\n    todos: PropTypes.array.isRequired\r\n}\r\n\r\nexport default Todos;","import React from 'react';\r\nimport { Link } from 'react-router-dom';\r\n\r\nfunction Header(){\r\n    return(\r\n        <header style={headerStyle}>\r\n            <h1>Husky - React - Todo List</h1>\r\n            <Link style={linkStyle} to='/'>Home</Link> | <Link style={linkStyle} to='/about'>About</Link>\r\n        </header>\r\n    )\r\n}\r\n\r\nconst headerStyle = {\r\n    background: '#333',\r\n    color:'#fff',\r\n    textAlign:'center',\r\n    padding:'10px'\r\n}\r\n\r\nconst linkStyle = {\r\n    color:'#fff'\r\n}\r\n\r\nexport default Header;","import React, { Component } from 'react'\r\n\r\nexport class AddToDo extends Component {\r\n\r\n    state = {\r\n        title:''\r\n    }\r\n\r\n    onChange = (e)=>{\r\n        this.setState({ [e.target.name] : e.target.value});\r\n    }\r\n\r\n    onSubmit = (e)=>{\r\n        e.preventDefault();\r\n        this.props.addTodo(this.state.title);\r\n        this.setState({title:''});\r\n    }\r\n\r\n  render() {\r\n    return (\r\n      <form onSubmit={this.onSubmit} style={{display:'flex'}}>\r\n          <input \r\n            type=\"text\" \r\n            name=\"title\"\r\n            style={{flex:'10',padding:'5px'}}\r\n            placeholder='Add Todo...'\r\n            value={this.state.title}\r\n            onChange={this.onChange}\r\n          />\r\n          <input \r\n            type=\"submit\" \r\n            value=\"Submit\"\r\n            className='btn'\r\n            style={{flex:'1'}}\r\n          />\r\n      </form>\r\n    )\r\n  }\r\n}\r\n\r\nexport default AddToDo\r\n","import React from 'react'\r\n\r\nexport default function About() {\r\n  return (\r\n    <div>\r\n        <h1>About</h1>\r\n        <p>This is the To Do List App Version 1.0.0. It is part of the React Crash Course</p>\r\n    </div>\r\n  )\r\n}\r\n","import React, { Component } from 'react';\nimport './App.css';\nimport { BrowserRouter as Router, Route } from 'react-router-dom';\nimport Todos from './components/ToDos';\nimport Header from './components/layout/Header';\nimport AddToDo from './components/AddToDo';\nimport axios from 'axios';\nimport About from './components/pages/About';\n\nclass App extends Component {\n\n  state = {\n    todos: []\n  }\n\n  componentDidMount() {\n    axios.get('https://jsonplaceholder.typicode.com/todos?_limit=10')\n      .then(res => this.setState({ todos: res.data }));\n  }\n\n  // Toggle Complete\n  markComplete = (id) => {\n    this.setState({\n      todos: this.state.todos.map(todo => {\n        if (todo.id === id) {\n          todo.completed = !todo.completed;\n        }\n        return todo;\n      })\n    })\n  }\n\n  // Delete Todo\n  deleteTodo = (id) => {\n    axios.delete(`https://jsonplaceholder.typicode.com/todos/${id}`)\n      .then(res => this.setState({ todos: [...this.state.todos.filter(todo => todo.id !== id)] }));\n  }\n\n  addTodo = (title) => {\n    axios.post('https://jsonplaceholder.typicode.com/todos', {\n      title,\n      completed: false\n    })\n      .then(res => this.setState({ todos: [...this.state.todos, res.data] }));\n\n  }\n\n  render() {\n    return (\n      <Router>\n        <div className=\"App\">\n          <div className=\"container\">\n            <Header />\n            <Route exact path='/' render={props => (\n              <React.Fragment>\n                <AddToDo addTodo={this.addTodo} />\n                <Todos todos={this.state.todos} markComplete={this.markComplete}\n                  deleteTodo={this.deleteTodo} />\n              </React.Fragment>\n            )} />\n            <Route path='/about' component={About} />\n          </div>\n        </div>\n      </Router>\n    );\n  }\n}\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}